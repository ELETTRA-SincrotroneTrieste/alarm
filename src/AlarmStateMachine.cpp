/*----- PROTECTED REGION ID(AlarmStateMachine.cpp) ENABLED START -----*/
static const char *RcsId = "$Id:  $";
//=============================================================================
//
// file :        AlarmStateMachine.cpp
//
// description : State machine file for the Alarm class
//
// project :     alarm
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <Alarm.h>

/*----- PROTECTED REGION END -----*/	//	Alarm::AlarmStateMachine.cpp

//================================================================
//  States  |  Description
//================================================================


namespace Alarm_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : Alarm::is_alarm_allowed()
 *	Description : Execution allowed for alarm attribute
 */
//--------------------------------------------------------
bool Alarm::is_alarm_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for alarm attribute in read access.
	/*----- PROTECTED REGION ID(Alarm::alarmStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	Alarm::alarmStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Alarm::is_AlarmState_allowed()
 *	Description : Execution allowed for AlarmState attribute
 */
//--------------------------------------------------------
bool Alarm::is_AlarmState_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for AlarmState attribute in read access.
	/*----- PROTECTED REGION ID(Alarm::AlarmStateStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	Alarm::AlarmStateStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Alarm::is_AlarmFormula_allowed()
 *	Description : Execution allowed for AlarmFormula attribute
 */
//--------------------------------------------------------
bool Alarm::is_AlarmFormula_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for AlarmFormula attribute in read access.
	/*----- PROTECTED REGION ID(Alarm::AlarmFormulaStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	Alarm::AlarmFormulaStateAllowed_READ
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : Alarm::is_Ack_allowed()
 *	Description : Execution allowed for Ack attribute
 */
//--------------------------------------------------------
bool Alarm::is_Ack_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Ack command.
	/*----- PROTECTED REGION ID(Alarm::AckStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	Alarm::AckStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Alarm::is_Load_allowed()
 *	Description : Execution allowed for Load attribute
 */
//--------------------------------------------------------
bool Alarm::is_Load_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Load command.
	/*----- PROTECTED REGION ID(Alarm::LoadStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	Alarm::LoadStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Alarm::is_Remove_allowed()
 *	Description : Execution allowed for Remove attribute
 */
//--------------------------------------------------------
bool Alarm::is_Remove_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Remove command.
	/*----- PROTECTED REGION ID(Alarm::RemoveStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	Alarm::RemoveStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Alarm::is_Configured_allowed()
 *	Description : Execution allowed for Configured attribute
 */
//--------------------------------------------------------
bool Alarm::is_Configured_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Configured command.
	/*----- PROTECTED REGION ID(Alarm::ConfiguredStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	Alarm::ConfiguredStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Alarm::is_StopNew_allowed()
 *	Description : Execution allowed for StopNew attribute
 */
//--------------------------------------------------------
bool Alarm::is_StopNew_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for StopNew command.
	/*----- PROTECTED REGION ID(Alarm::StopNewStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	Alarm::StopNewStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Alarm::is_Silence_allowed()
 *	Description : Execution allowed for Silence attribute
 */
//--------------------------------------------------------
bool Alarm::is_Silence_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Silence command.
	/*----- PROTECTED REGION ID(Alarm::SilenceStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	Alarm::SilenceStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Alarm::is_Modify_allowed()
 *	Description : Execution allowed for Modify attribute
 */
//--------------------------------------------------------
bool Alarm::is_Modify_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Modify command.
	/*----- PROTECTED REGION ID(Alarm::ModifyStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	Alarm::ModifyStateAllowed
	return true;
}


/*----- PROTECTED REGION ID(Alarm::AlarmStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	Alarm::AlarmStateAllowed.AdditionalMethods

}	//	End of namespace
